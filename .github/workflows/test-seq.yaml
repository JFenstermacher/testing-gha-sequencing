name: Test

on:
  push:
    branches:
      - main

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Run Database Migration
        id: db-migration
        run: |
          echo "migrationState=Failure" >> $GITHUB_OUTPUT
          echo "failureMessage='Migration failed'" >> $GITHUB_OUTPUT

      - name: ECS deploy
        if: steps.db-migration.outputs.migrationState != 'Failure'
        id: ecs-deploy
        run: |
          echo "deploymentState=Failure" >> $GITHUB_OUTPUT
          echo "failureMessage='Deployment failed'" >> $GITHUB_OUTPUT

      - name: Detecting failure
        if: steps.ecs-deploy.outputs.deploymentState == 'Failure' || steps.db-migration.outputs.migrationState == 'Failure'
        run: |
          echo "Failures while updating services"
          exit 1

    outputs:
      deployment-state: ${{ steps.ecs-deploy.outputs.deploymentState || steps.db-migration.outputs.migrationState }}
      failure-message: ${{ steps.db-migration.outputs.failureMessage || steps.db-migration.outputs.failureMessage }}

  output-test:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - deploy-test
    steps:
      - name: echo
        run: |
          echo "${{ needs.deploy-test.outputs.deployment-state }}"
          echo "${{ needs.deploy-test.outputs.failure-message }}"
